{"version":3,"sources":["components/Note.js","components/Notification.js","components/Noteform.js","services/login.js","services/note.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Noteform","props","onSubmit","addNote","value","newNote","onChange","handleNoteChange","type","login","credentials","a","axios","post","response","data","get","then","id","newObject","request","put","console","log","newToken","App","useState","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","noteService","initialNotes","handleLogin","event","preventDefault","loginService","token","setTimeout","notesToShow","filter","name","target","map","i","key","find","n","changedNote","returnedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cd7ad60.chunk.js","sourcesContent":["\nimport React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Noteform = ({props}) => {\n  return(\n    <form onSubmit={props.addNote}>\n      <input\n        value={props.newNote}\n        onChange={props.handleNoteChange}\n      />\n      <button type=\"submit\">save</button>\n    </form>\n  )\n}\n\nexport default Noteform\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default {login}\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const config = {\n    headers: {Authorization: token},\n  }\n  const request = axios.post(baseUrl, newObject, config)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  console.log(request)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Noteform from './components/Noteform'\nimport loginService from './services/login.js'\nimport noteService from './services/note'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleLogin =  async (event) => {\n    event.preventDefault()\n    try{\n      const user = await loginService.login({\n        username, password,\n      })\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    }\n    catch(exception){\n      setErrorMessage('wrong credentials')\n      setTimeout(()=> {\n        setErrorMessage(null)\n      }, 5000)\n    console.log('logging in with ', username, password)\n  }\n}\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const loginForm = () => (\n    <form onSubmit ={handleLogin}>\n      <div>\n        username\n        <input\n          type='text'\n          value={username}\n          name='Username'\n          onChange={({target}) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type='password'\n          value={password}\n          name='Password'\n          onChange={({target}) => setPassword(target.value)}\n        />\n      </div>\n      <button type='submit'>login</button>\n    </form>\n    )\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in </p>\n          <Noteform\n            handleNoteChange={this.handleNoteChange}\n            addNote={this.addNote}\n            newNote={this.newNote}\n          />\n        </div>}\n        <div>\n          <button onClick={() => setShowAll(!showAll)}>\n            show {showAll ? 'important' : 'all' }\n          </button>\n        </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}